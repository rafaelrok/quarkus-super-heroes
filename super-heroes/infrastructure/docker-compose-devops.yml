version: '3.7'

services:
  ###################-rabbitmq-####################
  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=@123456@
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

  ###################-keycloak-####################
  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    ports:
      - "8083:8083"
    environment:
      #- DB_VENDOR="POSTGRES"
      #- DB_ADDR=postgres
      #- DB_PORT=5432
      #- DB_DATABASE=tasks
      #- DB_USER=postgres
      #- DB_SCHEMA=public
      #- DB_PASSWORD=@123456@
      #- KEYCLOAK_USER=admin
      #- KEYCLOAK_PASSWORD=@123456@
      - KEYCLOAK_LOGLEVEL=DEBUG
      - ROOT_LOGLEVEL=DEBUG
    #restart: always
    ###################-tomcat-####################
  tomcat:
    image: tomcat:8.5.50
    container_name: tomcat
    #restart: always
    ports:
      - "127.0.0.1:8002:8002"
    environment:
      - TOMCAT_ENABLE_AUTH=true
      - TOMCAT_INSTALL_DEFAULT_WEBAPPS=true
    volumes:
      - /usr/local/docker/tomcat/webapps:/usr/local/tomcat/webapps
      - /usr/local/docker/tomcat/conf/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
      - /usr/local/docker/tomcat/conf/server.xml:/usr/local/tomcat/conf/server.xml
  ###################-jenkins-####################
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    privileged: true
    user: root
    ports:
      #- 50001:50000
      - "8081:8080"
    volumes:
      - ~/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
  ###################-Prometheus-####################
  monitoring:
    image: "prom/prometheus:v2.30.3"
    container_name: "prometheus"
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
###################-zookeeper-####################
  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    container_name: "zookeeper"
    command: [
            "sh", "-c",
            "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
        - "2181:2181"
    environment:
        LOG_DIR: /tmp/logs
###################-Kafka-####################
  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    container_name: "kafka"
    command: [
            "sh", "-c",
            "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
        - zookeeper
    ports:
        - "9092:9092"
    environment:
        LOG_DIR: "/tmp/logs"
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

